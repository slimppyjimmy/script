
#user  nobody;
worker_processes  1;

#error_log  error.log;
#error_log  error.log  notice;
#error_log  error.log  info;

#pid        nginx.pid;

events {
    worker_connections  1024;
}

http {
    include       mime.types;
    default_type  application/octet-stream;

    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"';

    #access_log  access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  65;

    #gzip  on;

    #统一设置当负载服务器不正常时，转发给下一服务器；注意不能配置http_404，否则当出现404（地址配置或输入错误）达到max_fails时，将会导致所有server处于fail状态，请求将无法获得响应
    proxy_next_upstream error timeout http_502;

    upstream sso-servers {
        #weigth参数表示权值，权值越高被分配到的几率越大；
        #fail_timeout；如果在 fail_timeout 期间后端失败了 max_fails 次，那么就将这个后端标识为不可用，在接下来的 fail_timeout 期间， NGINX 不会再将请求分配到这个后端；max_fails默认值为1，fail_timeout默认值为10；
        server localhost:7911;
        server localhost:7912;
        server localhost:7913;
        #目前sso必须使用ip保持
        ip_hash;
    }
    upstream service-servers {
        #weigth参数表示权值，权值越高被分配到的几率越大
        server localhost:7921;
        server localhost:7922;
        server localhost:7923;
    }
    upstream manager-servers {
        #weigth参数表示权值，权值越高被分配到的几率越大
        server localhost:7931;
        server localhost:7932;
        server localhost:7933;
    }
    upstream test-servers {
        #weigth参数表示权值，权值越高被分配到的几率越大
        server localhost:7981;
        server localhost:7982;
        server localhost:7982;
    }
    server {
        listen       8777;
        #设置可访问域名，如果使用ip访问或在hosts中设置了ip域名映射，则不需要设置
        #server_name  localhost,vmhost,mainhost;
        charset utf-8;
        #统一设置header信息，以便应用能够获得实际的访问地址而不是ngingx的地址
        proxy_set_header        Host $http_host;
        proxy_set_header        X-Real-IP $remote_addr;
        proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header        X-Forwarded-Port $server_port;
        proxy_set_header        X-Forwarded-Proto $scheme;
        
        #匹配的地址（注意地址应以/结束，否则当一个location是另一个location的一部分时，将可能导致错误的匹配）
        location /sso/ {
            #设置代理地址，如果地址中仅包括服务器名称+端口，则自动复制
            proxy_pass http://sso-servers;
        }
        location /dascService/ {
            proxy_pass http://service-servers;
        }
        location /dasc/ {
            proxy_pass http://manager-servers;
        }
        location /test/ {
            proxy_pass http://test-servers;
        }
    }

    #当manager、service（甚至sso）部署在同一个tomcat时，使用
    upstream dasc-servers {
        #weigth参数表示权值，权值越高被分配到的几率越大
        server localhost:7941;
        server localhost:7942;
        server localhost:7943;
    }
    server {
        listen       8778;
        #设置可访问域名，如果使用ip访问或在hosts中设置了ip域名映射，则不需要设置
        #server_name  localhost,vmhost,mainhost;
        charset utf-8;
        #统一设置header信息，以便应用能够获得实际的访问地址而不是ngingx的地址
        proxy_set_header        Host $http_host;
        proxy_set_header        X-Real-IP $remote_addr;
        proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header        X-Forwarded-Port $server_port;
        proxy_set_header        X-Forwarded-Proto $scheme;
        
        #匹配的地址（注意地址应以/结束，否则当一个location是另一个location的一部分时，将可能导致错误的匹配）
        location / {
            #设置代理地址，如果地址中仅包括服务器名称+端口，则自动复制
            proxy_pass http://dasc-servers;
        }
    }

    # another virtual host using mix of IP-, name-, and port-based configuration
    #
    #server {
    #    listen       8000;
    #    listen       somename:8080;
    #    server_name  somename  alias  another.alias;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}


    # HTTPS server
    #
    #server {
    #    listen       443 ssl;
    #    server_name  localhost;

    #    ssl_certificate      cert.pem;
    #    ssl_certificate_key  cert.key;

    #    ssl_session_cache    shared:SSL:1m;
    #    ssl_session_timeout  5m;

    #    ssl_ciphers  HIGH:!aNULL:!MD5;
    #    ssl_prefer_server_ciphers  on;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}

}
